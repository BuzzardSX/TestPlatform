@using System.Security.Claims
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="container p-0 shadow-sm" id="wrapper">
	<aside class="px-3">
		<a class="d-block px-4 py-3" id="logo" href="/">
			<img class="img-fluid" src="/img/logo.png" />
		</a>
		<ul class="nav nav-pills flex-column text-dark mt-4">
			@if (Auth.User.IsInRole("Admin"))
			{
				<li class="nav-item">
					<NavLink class="nav-link text-dark" href="/users">
						<i class="bi bi-people-fill"></i>
						<span class="ms-2">Список обучающихся</span>
					</NavLink>
				</li>
			}
			<li class="nav-item">
				<button class="nav-link text-dark d-inline-flex justify-content-between w-100" data-bs-toggle="collapse" data-bs-target="#TestNav" aria-expanded="true">
					<span>
						<i class="bi bi-journal"></i>
						<span class="ms-2">Тест</span>
					</span>
					<span class="toggler">
						<i class="bi bi-chevron-down"></i>
					</span>
				</button>
				<div class="collapse show ps-1" id="TestNav">
					<ul class="nav nav-pills flex-column ms-4">
						@if (Auth.User.IsInRole("Admin"))
						{
							<li class="nav-item">
								<NavLink class="nav-link text-dark" href="/test-edit">Создать тест</NavLink>
							</li>
						}
						<li class="nav-item">
							<NavLink class="nav-link text-dark" href="/tests">Список тестов</NavLink>
						</li>
					</ul>
				</div>
			</li>
			@if (Auth.User.IsInRole("Admin"))
			{
				<li class="nav-item">
					<NavLink class="nav-link text-dark" href="/results">
						<i class="bi bi-card-list"></i>
						<span class="ms-2">Итоги тестирования</span>
					</NavLink>
				</li>
			}
			@if (Auth.User.IsInRole("User"))
			{
				<li class="nav-item">
					<NavLink class="nav-link text-dark" href="/sertificates">
						<i class="bi bi-award-fill"></i>
						<span class="ms-2">Сертификаты</span>
					</NavLink>
				</li>
			}
		</ul>
	</aside>
	<main class="bg-white">
		<div class="navbar shadow-sm ps-1">
			<div class="container">
				@if (Auth.User.Identity.IsAuthenticated)
				{
					<span class="navbar-text fw-bold">
						<span>@Auth.User.FindFirst(ClaimTypes.GivenName).Value</span>
						<span>@Auth.User.FindFirst(ClaimTypes.Surname).Value</span>
						<span>(@(Auth.User.IsInRole("Admin") ? "Администратор" : "Обучающийся"))</span>
					</span>
				}
				@if (Auth.User.Identity.IsAuthenticated)
				{
					<NavLink class="btn btn-outline-primary" href="/logout">Выйти</NavLink>
				}
				else
				{
					<NavLink class="btn btn-outline-primary" href="/login">Войти</NavLink>
				}
			</div>
		</div>
		<div class="px-2">@Body</div>
	</main>
</div>

@code {
	private AuthenticationState Auth { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Auth = await AuthenticationStateProvider.GetAuthenticationStateAsync();
	}
}
